---
- name: Harden Ubuntu system on first boot
  hosts: all
  become: true

  vars:
    new_username: secureadmin
    admin_user: admin
    user_password: "{{ 'YourPasswordHere' | password_hash('sha512') }}"
    local_public_key_path: "{{ lookup('env','HOME') + '/.ssh/id_rsa.pub' }}"
    allowed_ssh_networks:
      - 192.168.1.0/24
      - 203.0.113.42/32

  tasks:
    # --- Task 1: Patching ---
    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Upgrade all packages to latest versions
      apt:
        upgrade: dist

    - name: Reboot the system after patching
      reboot:
        msg: "Rebooting after patching"
        pre_reboot_delay: 10
        post_reboot_delay: 30
        reboot_timeout: 600

    # --- Task: Disable unused services ---
    - name: Disable and stop unused services
      systemd:
        name: "{{ item }}"
        enabled: no
        state: stopped
      loop:
        - cups
        - avahi-daemon
        - snapd
        - bluetooth
        - rpcbind
      ignore_errors: yes

    # --- Task 2: Secure SSH Access ---
    - name: Create a new user with sudo privileges
      user:
        name: "{{ new_username }}"
        groups: sudo
        append: yes
        shell: /bin/bash
        create_home: yes

    - name: Set password for the new user
      user:
        name: "{{ new_username }}"
        password: "{{ user_password }}"

    - name: Allow passwordless sudo for secure user
      copy:
        dest: "/etc/sudoers.d/{{ new_username }}"
        content: "{{ new_username }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: '0440'

    - name: Disable root login via SSH
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
        state: present
        backup: yes

    # --- Task 3: Create admin user and SSH setup ---
    - name: Ensure group 'admin' exists
      group:
        name: "{{ admin_user }}"
        state: present

    - name: Create the admin user and add to sudo and admin group
      user:
        name: "{{ admin_user }}"
        groups: sudo,{{ admin_user }}
        append: yes
        shell: /bin/bash
        create_home: yes

    - name: Read SSH public key from local machine
      delegate_to: localhost
      run_once: true
      set_fact:
        admin_ssh_key: "{{ lookup('file', local_public_key_path) }}"

    - name: Create .ssh directory for admin user
      file:
        path: "/home/{{ admin_user }}/.ssh"
        state: directory
        owner: "{{ admin_user }}"
        group: "{{ admin_user }}"
        mode: '0700'

    - name: Add authorized SSH key for admin user
      copy:
        content: "{{ admin_ssh_key }}"
        dest: "/home/{{ admin_user }}/.ssh/authorized_keys"
        owner: "{{ admin_user }}"
        group: "{{ admin_user }}"
        mode: '0600'

    - name: Allow passwordless sudo for admin user
      copy:
        dest: "/etc/sudoers.d/{{ admin_user }}"
        content: "{{ admin_user }} ALL=(ALL) NOPASSWD:ALL"
        owner: root
        group: root
        mode: '0440'

    # --- Task 4: Enforce known-good SSH config ---
    - name: Deploy hardened SSH config
      copy:
        src: files/sshd_config
        dest: /etc/ssh/sshd_config
        owner: root
        group: root
        mode: '0600'
        backup: yes
      notify: Restart SSH

    # --- Task 5: Restrict SSH to allowed IPs using firewalld ---
    - name: Move SSH service to the internal zone
      firewalld:
        service: ssh
        zone: internal
        permanent: yes
        state: enabled
        immediate: yes

    - name: Remove SSH service from default zone (public)
      firewalld:
        service: ssh
        zone: public
        permanent: yes
        state: disabled
        immediate: yes

    - name: Allow SSH access only from allowed IP addresses in internal zone
      firewalld:
        zone: internal
        source: "{{ item }}"
        state: enabled
        permanent: yes
        immediate: yes
      with_items: "{{ allowed_ssh_networks }}"

    # --- Task 6: Set login banner and MOTD ---
    - name: Set login banner (/etc/issue.net)
      copy:
        dest: /etc/issue.net
        content: |
          ******************************************************************
          * WARNING: Unauthorized access to this system is prohibited.    *
          * All activity may be monitored and reported.                   *
          * By logging in, you agree to comply with company policies.     *
          ******************************************************************
        owner: root
        group: root
        mode: '0644'

    - name: Configure SSH to display the login banner
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^Banner'
        line: 'Banner /etc/issue.net'
        state: present
      notify: Restart SSH

    - name: Set message of the day (/etc/motd)
      copy:
        dest: /etc/motd
        content: |
          Authorized users only. All activity is logged and monitored.
          Compliance with the company acceptable use policy is mandatory.
        owner: root
        group: root
        mode: '0644'

  handlers:
    - name: Restart SSH
      service:
        name: ssh
        state: restarted
